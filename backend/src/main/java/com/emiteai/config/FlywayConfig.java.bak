package com.emiteai.config;

import org.flywaydb.core.Flyway;
import org.springframework.boot.autoconfigure.flyway.FlywayMigrationStrategy;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Profile;
import java.util.Arrays;

/**
 * Configura√ß√£o do Flyway para cria√ß√£o autom√°tica de databases
 */
@Configuration
@Profile("docker")
public class FlywayConfig {

    public FlywayConfig() {
        System.out.println("üîß FlywayConfig loaded for docker profile!");
    }

    @Bean
    public FlywayMigrationStrategy flywayMigrationStrategy() {
        System.out.println("üîß FlywayMigrationStrategy bean created!");
        return flyway -> {
            System.out.println("üîÑ Starting Flyway migration...");
            System.out.println("üîç Flyway configuration:");
            System.out.println("  - Locations: " + Arrays.toString(flyway.getConfiguration().getLocations()));
            System.out.println("  - Schemas: " + Arrays.toString(flyway.getConfiguration().getSchemas()));
            System.out.println("  - Table: " + flyway.getConfiguration().getTable());
            
            Arrays.stream(flyway.info().all()).forEach(info -> {
                System.out.println("Migration: " + info.getVersion() + " - " + info.getDescription() + " - " + info.getState());
            });
            
            try {
                flyway.migrate();
                System.out.println("‚úÖ Flyway migration completed successfully!");
            } catch (Exception e) {
                System.err.println("‚ùå Flyway migration failed: " + e.getMessage());
                e.printStackTrace();
                throw e;
            }
        };
    }
}
